{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilisateur\\\\Documents\\\\GitHub\\\\test_react_component\\\\component-test\\\\src\\\\components\\\\Contact.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\nimport './contact.css';\nimport React, { useState } from 'react';\n\n// const Contact = ({ nom }) => {\n//   return (\n//     <div className=\"profil\">\n//       <img src='https://pbs.twimg.com/profile_images/1267052300964638720/JdScoFy__400x400.jpg' alt={`Profil de ${nom}`} />\n//       <span className={`connection-statut ${isConnected ? 'connected' : 'disconnected'}`}></span>\n//       <h2 className=\"nom\">John Doe</h2>\n\n//         {isConnected ? 'Connecté' : 'Déconnecté'}\n//     </div>\n//   )\n// };\n\n// export default Contact;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileComponent = () => {\n  _s();\n  const [isConnected, setIsConnected] = useState(true); // État initial connecté\n  const [userInfo, setUserInfo] = useState({\n    name: 'Nom Utilisateur',\n    // Remplacez par le nom initial\n    image: 'lien_vers_image' // Remplacez par le lien initial de l'image\n  });\n  const toggleConnection = () => {\n    setIsConnected(!isConnected);\n    // Mettez à jour les informations de l'utilisateur en fonction de l'état de connexion\n    if (isConnected) {\n      setUserInfo({\n        name: 'Déconnecté',\n        // Remplacez par le nom lors de la déconnexion\n        image: 'lien_vers_nouvelle_image' // Remplacez par le nouveau lien d'image\n      });\n    } else {\n      setUserInfo({\n        name: 'Nom Utilisateur',\n        // Remplacez par le nom initial\n        image: 'lien_vers_image' // Remplacez par le lien initial de l'image\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: userInfo.image,\n      alt: userInfo.name,\n      className: \"profile-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"user-name\",\n      children: userInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `connection-button ${isConnected ? 'connected' : 'disconnected'}`,\n      onClick: toggleConnection,\n      children: isConnected ? 'Connecté' : 'Déconnecté'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileComponent, \"y8TwTh7IJgM37XH2yernxdtBaRE=\");\n_c = ProfileComponent;\nexport default ProfileComponent;\nvar _c;\n$RefreshReg$(_c, \"ProfileComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ProfileComponent","_s","isConnected","setIsConnected","userInfo","setUserInfo","name","image","toggleConnection","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Utilisateur/Documents/GitHub/test_react_component/component-test/src/components/Contact.jsx"],"sourcesContent":["// import React from \"react\";\r\nimport './contact.css';\r\nimport React, { useState } from 'react';\r\n\r\n// const Contact = ({ nom }) => {\r\n//   return (\r\n//     <div className=\"profil\">\r\n//       <img src='https://pbs.twimg.com/profile_images/1267052300964638720/JdScoFy__400x400.jpg' alt={`Profil de ${nom}`} />\r\n//       <span className={`connection-statut ${isConnected ? 'connected' : 'disconnected'}`}></span>\r\n//       <h2 className=\"nom\">John Doe</h2>\r\n\r\n//         {isConnected ? 'Connecté' : 'Déconnecté'}\r\n//     </div>\r\n//   )\r\n// };\r\n\r\n// export default Contact;\r\n\r\n\r\n\r\n\r\nconst ProfileComponent = () => {\r\n  const [isConnected, setIsConnected] = useState(true); // État initial connecté\r\n  const [userInfo, setUserInfo] = useState({\r\n    name: 'Nom Utilisateur', // Remplacez par le nom initial\r\n    image: 'lien_vers_image' // Remplacez par le lien initial de l'image\r\n  });\r\n\r\n  const toggleConnection = () => {\r\n    setIsConnected(!isConnected);\r\n    // Mettez à jour les informations de l'utilisateur en fonction de l'état de connexion\r\n    if (isConnected) {\r\n      setUserInfo({\r\n        name: 'Déconnecté', // Remplacez par le nom lors de la déconnexion\r\n        image: 'lien_vers_nouvelle_image' // Remplacez par le nouveau lien d'image\r\n      });\r\n    } else {\r\n      setUserInfo({\r\n        name: 'Nom Utilisateur', // Remplacez par le nom initial\r\n        image: 'lien_vers_image' // Remplacez par le lien initial de l'image\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-component\">\r\n      <img src={userInfo.image} alt={userInfo.name} className=\"profile-image\" />\r\n      <p className=\"user-name\">{userInfo.name}</p>\r\n      <button\r\n        className={`connection-button ${isConnected ? 'connected' : 'disconnected'}`}\r\n        onClick={toggleConnection}\r\n      >\r\n        {isConnected ? 'Connecté' : 'Déconnecté'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileComponent;"],"mappings":";;AAAA;AACA,OAAO,eAAe;AACtB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,IAAI,EAAE,iBAAiB;IAAE;IACzBC,KAAK,EAAE,iBAAiB,CAAC;EAC3B,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5B;IACA,IAAIA,WAAW,EAAE;MACfG,WAAW,CAAC;QACVC,IAAI,EAAE,YAAY;QAAE;QACpBC,KAAK,EAAE,0BAA0B,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLF,WAAW,CAAC;QACVC,IAAI,EAAE,iBAAiB;QAAE;QACzBC,KAAK,EAAE,iBAAiB,CAAC;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACER,OAAA;IAAKU,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCX,OAAA;MAAKY,GAAG,EAAEP,QAAQ,CAACG,KAAM;MAACK,GAAG,EAAER,QAAQ,CAACE,IAAK;MAACG,SAAS,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1EjB,OAAA;MAAGU,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAEN,QAAQ,CAACE;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CjB,OAAA;MACEU,SAAS,EAAE,qBAAqBP,WAAW,GAAG,WAAW,GAAG,cAAc,EAAG;MAC7Ee,OAAO,EAAET,gBAAiB;MAAAE,QAAA,EAEzBR,WAAW,GAAG,UAAU,GAAG;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AAqCtB,eAAeA,gBAAgB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}